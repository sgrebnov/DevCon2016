//-----------------------------------------------------------------------------
// <auto-generated> 
//   This code was generated by a tool. 
// 
//   Changes to this file may cause incorrect behavior and will be lost if  
//   the code is regenerated.
//
//   Tool: AllJoynCodeGenerator.exe
//
//   This tool is located in the Windows 10 SDK and the Windows 10 AllJoyn 
//   Visual Studio Extension in the Visual Studio Gallery.  
//
//   The generated code should be packaged in a Windows 10 C++/CX Runtime  
//   Component which can be consumed in any UWP-supported language using 
//   APIs that are available in Windows.Devices.AllJoyn.
//
//   Using AllJoynCodeGenerator - Invoke the following command with a valid 
//   Introspection XML file and a writable output directory:
//     AllJoynCodeGenerator -i <INPUT XML FILE> -o <OUTPUT DIRECTORY>
// </auto-generated>
//-----------------------------------------------------------------------------
#pragma once

namespace com { namespace lg { namespace Control { namespace TV {

// Methods
public ref class TVDownChannelCalledEventArgs sealed
{
public:
    TVDownChannelCalledEventArgs(_In_ Windows::Devices::AllJoyn::AllJoynMessageInfo^ info);

    property Windows::Devices::AllJoyn::AllJoynMessageInfo^ MessageInfo
    {
        Windows::Devices::AllJoyn::AllJoynMessageInfo^ get() { return m_messageInfo; }
    }

    property TVDownChannelResult^ Result
    {
        TVDownChannelResult^ get() { return m_result; }
        void set(_In_ TVDownChannelResult^ value) { m_result = value; }
    }

    Windows::Foundation::Deferral^ GetDeferral();

    static Windows::Foundation::IAsyncOperation<TVDownChannelResult^>^ GetResultAsync(TVDownChannelCalledEventArgs^ args)
    {
        args->InvokeAllFinished();
        auto t = concurrency::create_task(args->m_tce);
        return concurrency::create_async([t]() -> concurrency::task<TVDownChannelResult^>
        {
            return t;
        });
    }
    
private:
    void Complete();
    void InvokeAllFinished();
    void InvokeCompleteHandler();

    bool m_raised;
    int m_completionsRequired;
    concurrency::task_completion_event<TVDownChannelResult^> m_tce;
    std::mutex m_lock;
    Windows::Devices::AllJoyn::AllJoynMessageInfo^ m_messageInfo;
    TVDownChannelResult^ m_result;
};

public ref class TVGetChannelListCalledEventArgs sealed
{
public:
    TVGetChannelListCalledEventArgs(_In_ Windows::Devices::AllJoyn::AllJoynMessageInfo^ info, _In_ uint16 interfaceMemberStartingRecord, _In_ uint16 interfaceMemberNumRecords);

    property Windows::Devices::AllJoyn::AllJoynMessageInfo^ MessageInfo
    {
        Windows::Devices::AllJoyn::AllJoynMessageInfo^ get() { return m_messageInfo; }
    }

    property TVGetChannelListResult^ Result
    {
        TVGetChannelListResult^ get() { return m_result; }
        void set(_In_ TVGetChannelListResult^ value) { m_result = value; }
    }

    property uint16 StartingRecord
    {
        uint16 get() { return m_interfaceMemberStartingRecord; }
    }

    property uint16 NumRecords
    {
        uint16 get() { return m_interfaceMemberNumRecords; }
    }

    Windows::Foundation::Deferral^ GetDeferral();

    static Windows::Foundation::IAsyncOperation<TVGetChannelListResult^>^ GetResultAsync(TVGetChannelListCalledEventArgs^ args)
    {
        args->InvokeAllFinished();
        auto t = concurrency::create_task(args->m_tce);
        return concurrency::create_async([t]() -> concurrency::task<TVGetChannelListResult^>
        {
            return t;
        });
    }
    
private:
    void Complete();
    void InvokeAllFinished();
    void InvokeCompleteHandler();

    bool m_raised;
    int m_completionsRequired;
    concurrency::task_completion_event<TVGetChannelListResult^> m_tce;
    std::mutex m_lock;
    Windows::Devices::AllJoyn::AllJoynMessageInfo^ m_messageInfo;
    TVGetChannelListResult^ m_result;
    uint16 m_interfaceMemberStartingRecord;
    uint16 m_interfaceMemberNumRecords;
};

public ref class TVKeyInputCalledEventArgs sealed
{
public:
    TVKeyInputCalledEventArgs(_In_ Windows::Devices::AllJoyn::AllJoynMessageInfo^ info, _In_ uint16 interfaceMemberVirtualKeyVal);

    property Windows::Devices::AllJoyn::AllJoynMessageInfo^ MessageInfo
    {
        Windows::Devices::AllJoyn::AllJoynMessageInfo^ get() { return m_messageInfo; }
    }

    property TVKeyInputResult^ Result
    {
        TVKeyInputResult^ get() { return m_result; }
        void set(_In_ TVKeyInputResult^ value) { m_result = value; }
    }

    property uint16 VirtualKeyVal
    {
        uint16 get() { return m_interfaceMemberVirtualKeyVal; }
    }

    Windows::Foundation::Deferral^ GetDeferral();

    static Windows::Foundation::IAsyncOperation<TVKeyInputResult^>^ GetResultAsync(TVKeyInputCalledEventArgs^ args)
    {
        args->InvokeAllFinished();
        auto t = concurrency::create_task(args->m_tce);
        return concurrency::create_async([t]() -> concurrency::task<TVKeyInputResult^>
        {
            return t;
        });
    }
    
private:
    void Complete();
    void InvokeAllFinished();
    void InvokeCompleteHandler();

    bool m_raised;
    int m_completionsRequired;
    concurrency::task_completion_event<TVKeyInputResult^> m_tce;
    std::mutex m_lock;
    Windows::Devices::AllJoyn::AllJoynMessageInfo^ m_messageInfo;
    TVKeyInputResult^ m_result;
    uint16 m_interfaceMemberVirtualKeyVal;
};

public ref class TVUpChannelCalledEventArgs sealed
{
public:
    TVUpChannelCalledEventArgs(_In_ Windows::Devices::AllJoyn::AllJoynMessageInfo^ info);

    property Windows::Devices::AllJoyn::AllJoynMessageInfo^ MessageInfo
    {
        Windows::Devices::AllJoyn::AllJoynMessageInfo^ get() { return m_messageInfo; }
    }

    property TVUpChannelResult^ Result
    {
        TVUpChannelResult^ get() { return m_result; }
        void set(_In_ TVUpChannelResult^ value) { m_result = value; }
    }

    Windows::Foundation::Deferral^ GetDeferral();

    static Windows::Foundation::IAsyncOperation<TVUpChannelResult^>^ GetResultAsync(TVUpChannelCalledEventArgs^ args)
    {
        args->InvokeAllFinished();
        auto t = concurrency::create_task(args->m_tce);
        return concurrency::create_async([t]() -> concurrency::task<TVUpChannelResult^>
        {
            return t;
        });
    }
    
private:
    void Complete();
    void InvokeAllFinished();
    void InvokeCompleteHandler();

    bool m_raised;
    int m_completionsRequired;
    concurrency::task_completion_event<TVUpChannelResult^> m_tce;
    std::mutex m_lock;
    Windows::Devices::AllJoyn::AllJoynMessageInfo^ m_messageInfo;
    TVUpChannelResult^ m_result;
};

// Readable Properties
public ref class TVGetChannelIDRequestedEventArgs sealed
{
public:
    TVGetChannelIDRequestedEventArgs(_In_ Windows::Devices::AllJoyn::AllJoynMessageInfo^ info);

    property Windows::Devices::AllJoyn::AllJoynMessageInfo^ MessageInfo
    {
        Windows::Devices::AllJoyn::AllJoynMessageInfo^ get() { return m_messageInfo; }
    }

    property TVGetChannelIDResult^ Result
    {
        TVGetChannelIDResult^ get() { return m_result; }
        void set(_In_ TVGetChannelIDResult^ value) { m_result = value; }
    }

    Windows::Foundation::Deferral^ GetDeferral();

    static Windows::Foundation::IAsyncOperation<TVGetChannelIDResult^>^ GetResultAsync(TVGetChannelIDRequestedEventArgs^ args)
    {
        args->InvokeAllFinished();
        auto t = concurrency::create_task(args->m_tce);
        return concurrency::create_async([t]() -> concurrency::task<TVGetChannelIDResult^>
        {
            return t;
        });
    }

private:
    void Complete();
    void InvokeAllFinished();
    void InvokeCompleteHandler();

    bool m_raised;
    int m_completionsRequired;
    concurrency::task_completion_event<TVGetChannelIDResult^> m_tce;
    std::mutex m_lock;
    Windows::Devices::AllJoyn::AllJoynMessageInfo^ m_messageInfo;
    TVGetChannelIDResult^ m_result;
};

public ref class TVGetInputSourceRequestedEventArgs sealed
{
public:
    TVGetInputSourceRequestedEventArgs(_In_ Windows::Devices::AllJoyn::AllJoynMessageInfo^ info);

    property Windows::Devices::AllJoyn::AllJoynMessageInfo^ MessageInfo
    {
        Windows::Devices::AllJoyn::AllJoynMessageInfo^ get() { return m_messageInfo; }
    }

    property TVGetInputSourceResult^ Result
    {
        TVGetInputSourceResult^ get() { return m_result; }
        void set(_In_ TVGetInputSourceResult^ value) { m_result = value; }
    }

    Windows::Foundation::Deferral^ GetDeferral();

    static Windows::Foundation::IAsyncOperation<TVGetInputSourceResult^>^ GetResultAsync(TVGetInputSourceRequestedEventArgs^ args)
    {
        args->InvokeAllFinished();
        auto t = concurrency::create_task(args->m_tce);
        return concurrency::create_async([t]() -> concurrency::task<TVGetInputSourceResult^>
        {
            return t;
        });
    }

private:
    void Complete();
    void InvokeAllFinished();
    void InvokeCompleteHandler();

    bool m_raised;
    int m_completionsRequired;
    concurrency::task_completion_event<TVGetInputSourceResult^> m_tce;
    std::mutex m_lock;
    Windows::Devices::AllJoyn::AllJoynMessageInfo^ m_messageInfo;
    TVGetInputSourceResult^ m_result;
};

public ref class TVGetSupportedInputSourcesRequestedEventArgs sealed
{
public:
    TVGetSupportedInputSourcesRequestedEventArgs(_In_ Windows::Devices::AllJoyn::AllJoynMessageInfo^ info);

    property Windows::Devices::AllJoyn::AllJoynMessageInfo^ MessageInfo
    {
        Windows::Devices::AllJoyn::AllJoynMessageInfo^ get() { return m_messageInfo; }
    }

    property TVGetSupportedInputSourcesResult^ Result
    {
        TVGetSupportedInputSourcesResult^ get() { return m_result; }
        void set(_In_ TVGetSupportedInputSourcesResult^ value) { m_result = value; }
    }

    Windows::Foundation::Deferral^ GetDeferral();

    static Windows::Foundation::IAsyncOperation<TVGetSupportedInputSourcesResult^>^ GetResultAsync(TVGetSupportedInputSourcesRequestedEventArgs^ args)
    {
        args->InvokeAllFinished();
        auto t = concurrency::create_task(args->m_tce);
        return concurrency::create_async([t]() -> concurrency::task<TVGetSupportedInputSourcesResult^>
        {
            return t;
        });
    }

private:
    void Complete();
    void InvokeAllFinished();
    void InvokeCompleteHandler();

    bool m_raised;
    int m_completionsRequired;
    concurrency::task_completion_event<TVGetSupportedInputSourcesResult^> m_tce;
    std::mutex m_lock;
    Windows::Devices::AllJoyn::AllJoynMessageInfo^ m_messageInfo;
    TVGetSupportedInputSourcesResult^ m_result;
};

public ref class TVGetVersionRequestedEventArgs sealed
{
public:
    TVGetVersionRequestedEventArgs(_In_ Windows::Devices::AllJoyn::AllJoynMessageInfo^ info);

    property Windows::Devices::AllJoyn::AllJoynMessageInfo^ MessageInfo
    {
        Windows::Devices::AllJoyn::AllJoynMessageInfo^ get() { return m_messageInfo; }
    }

    property TVGetVersionResult^ Result
    {
        TVGetVersionResult^ get() { return m_result; }
        void set(_In_ TVGetVersionResult^ value) { m_result = value; }
    }

    Windows::Foundation::Deferral^ GetDeferral();

    static Windows::Foundation::IAsyncOperation<TVGetVersionResult^>^ GetResultAsync(TVGetVersionRequestedEventArgs^ args)
    {
        args->InvokeAllFinished();
        auto t = concurrency::create_task(args->m_tce);
        return concurrency::create_async([t]() -> concurrency::task<TVGetVersionResult^>
        {
            return t;
        });
    }

private:
    void Complete();
    void InvokeAllFinished();
    void InvokeCompleteHandler();

    bool m_raised;
    int m_completionsRequired;
    concurrency::task_completion_event<TVGetVersionResult^> m_tce;
    std::mutex m_lock;
    Windows::Devices::AllJoyn::AllJoynMessageInfo^ m_messageInfo;
    TVGetVersionResult^ m_result;
};

// Writable Properties
public ref class TVSetChannelIDRequestedEventArgs sealed
{
public:
    TVSetChannelIDRequestedEventArgs(_In_ Windows::Devices::AllJoyn::AllJoynMessageInfo^ info, _In_ Platform::String^ value);

    property Windows::Devices::AllJoyn::AllJoynMessageInfo^ MessageInfo
    {
        Windows::Devices::AllJoyn::AllJoynMessageInfo^ get() { return m_messageInfo; }
    }

    property Platform::String^ Value
    {
        Platform::String^ get() { return m_value; }
    }

    property TVSetChannelIDResult^ Result
    {
        TVSetChannelIDResult^ get() { return m_result; }
        void set(_In_ TVSetChannelIDResult^ value) { m_result = value; }
    }

    static Windows::Foundation::IAsyncOperation<TVSetChannelIDResult^>^ GetResultAsync(TVSetChannelIDRequestedEventArgs^ args)
    {
        args->InvokeAllFinished();
        auto t = concurrency::create_task(args->m_tce);
        return concurrency::create_async([t]() -> concurrency::task<TVSetChannelIDResult^>
        {
            return t;
        });
    }

    Windows::Foundation::Deferral^ GetDeferral();

private:
    void Complete();
    void InvokeAllFinished();
    void InvokeCompleteHandler();

    bool m_raised;
    int m_completionsRequired;
    concurrency::task_completion_event<TVSetChannelIDResult^> m_tce;
    std::mutex m_lock;
    Windows::Devices::AllJoyn::AllJoynMessageInfo^ m_messageInfo;
    Platform::String^ m_value;
    TVSetChannelIDResult^ m_result;
};

public ref class TVSetInputSourceRequestedEventArgs sealed
{
public:
    TVSetInputSourceRequestedEventArgs(_In_ Windows::Devices::AllJoyn::AllJoynMessageInfo^ info, _In_ uint16 value);

    property Windows::Devices::AllJoyn::AllJoynMessageInfo^ MessageInfo
    {
        Windows::Devices::AllJoyn::AllJoynMessageInfo^ get() { return m_messageInfo; }
    }

    property uint16 Value
    {
        uint16 get() { return m_value; }
    }

    property TVSetInputSourceResult^ Result
    {
        TVSetInputSourceResult^ get() { return m_result; }
        void set(_In_ TVSetInputSourceResult^ value) { m_result = value; }
    }

    static Windows::Foundation::IAsyncOperation<TVSetInputSourceResult^>^ GetResultAsync(TVSetInputSourceRequestedEventArgs^ args)
    {
        args->InvokeAllFinished();
        auto t = concurrency::create_task(args->m_tce);
        return concurrency::create_async([t]() -> concurrency::task<TVSetInputSourceResult^>
        {
            return t;
        });
    }

    Windows::Foundation::Deferral^ GetDeferral();

private:
    void Complete();
    void InvokeAllFinished();
    void InvokeCompleteHandler();

    bool m_raised;
    int m_completionsRequired;
    concurrency::task_completion_event<TVSetInputSourceResult^> m_tce;
    std::mutex m_lock;
    Windows::Devices::AllJoyn::AllJoynMessageInfo^ m_messageInfo;
    uint16 m_value;
    TVSetInputSourceResult^ m_result;
};

} } } } 
