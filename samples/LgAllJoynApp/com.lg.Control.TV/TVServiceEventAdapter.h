//-----------------------------------------------------------------------------
// <auto-generated> 
//   This code was generated by a tool. 
// 
//   Changes to this file may cause incorrect behavior and will be lost if  
//   the code is regenerated.
//
//   Tool: AllJoynCodeGenerator.exe
//
//   This tool is located in the Windows 10 SDK and the Windows 10 AllJoyn 
//   Visual Studio Extension in the Visual Studio Gallery.  
//
//   The generated code should be packaged in a Windows 10 C++/CX Runtime  
//   Component which can be consumed in any UWP-supported language using 
//   APIs that are available in Windows.Devices.AllJoyn.
//
//   Using AllJoynCodeGenerator - Invoke the following command with a valid 
//   Introspection XML file and a writable output directory:
//     AllJoynCodeGenerator -i <INPUT XML FILE> -o <OUTPUT DIRECTORY>
// </auto-generated>
//-----------------------------------------------------------------------------
#pragma once

namespace com { namespace lg { namespace Control { namespace TV {

// This class, and the associated EventArgs classes, exist for the benefit of JavaScript developers who
// do not have the ability to implement ITVService. Instead, TVServiceEventAdapter
// provides the Interface implementation and exposes a set of compatible events to the developer.
public ref class TVServiceEventAdapter sealed : [Windows::Foundation::Metadata::Default] ITVService
{
public:
    // Method Invocation Events
    event Windows::Foundation::TypedEventHandler<TVServiceEventAdapter^, TVDownChannelCalledEventArgs^>^ DownChannelCalled 
    { 
        Windows::Foundation::EventRegistrationToken add(Windows::Foundation::TypedEventHandler<TVServiceEventAdapter^, TVDownChannelCalledEventArgs^>^ handler) 
        { 
            return _DownChannelCalled += ref new Windows::Foundation::EventHandler<Platform::Object^>
            ([handler](Platform::Object^ sender, Platform::Object^ args)
            {
                handler->Invoke(safe_cast<TVServiceEventAdapter^>(sender), safe_cast<TVDownChannelCalledEventArgs^>(args));
            }, Platform::CallbackContext::Same);
        } 
        void remove(Windows::Foundation::EventRegistrationToken token) 
        { 
            _DownChannelCalled -= token; 
        } 
    internal: 
        void raise(TVServiceEventAdapter^ sender, TVDownChannelCalledEventArgs^ args) 
        { 
            _DownChannelCalled(sender, args);
        } 
    }

    event Windows::Foundation::TypedEventHandler<TVServiceEventAdapter^, TVGetChannelListCalledEventArgs^>^ GetChannelListCalled 
    { 
        Windows::Foundation::EventRegistrationToken add(Windows::Foundation::TypedEventHandler<TVServiceEventAdapter^, TVGetChannelListCalledEventArgs^>^ handler) 
        { 
            return _GetChannelListCalled += ref new Windows::Foundation::EventHandler<Platform::Object^>
            ([handler](Platform::Object^ sender, Platform::Object^ args)
            {
                handler->Invoke(safe_cast<TVServiceEventAdapter^>(sender), safe_cast<TVGetChannelListCalledEventArgs^>(args));
            }, Platform::CallbackContext::Same);
        } 
        void remove(Windows::Foundation::EventRegistrationToken token) 
        { 
            _GetChannelListCalled -= token; 
        } 
    internal: 
        void raise(TVServiceEventAdapter^ sender, TVGetChannelListCalledEventArgs^ args) 
        { 
            _GetChannelListCalled(sender, args);
        } 
    }

    event Windows::Foundation::TypedEventHandler<TVServiceEventAdapter^, TVKeyInputCalledEventArgs^>^ KeyInputCalled 
    { 
        Windows::Foundation::EventRegistrationToken add(Windows::Foundation::TypedEventHandler<TVServiceEventAdapter^, TVKeyInputCalledEventArgs^>^ handler) 
        { 
            return _KeyInputCalled += ref new Windows::Foundation::EventHandler<Platform::Object^>
            ([handler](Platform::Object^ sender, Platform::Object^ args)
            {
                handler->Invoke(safe_cast<TVServiceEventAdapter^>(sender), safe_cast<TVKeyInputCalledEventArgs^>(args));
            }, Platform::CallbackContext::Same);
        } 
        void remove(Windows::Foundation::EventRegistrationToken token) 
        { 
            _KeyInputCalled -= token; 
        } 
    internal: 
        void raise(TVServiceEventAdapter^ sender, TVKeyInputCalledEventArgs^ args) 
        { 
            _KeyInputCalled(sender, args);
        } 
    }

    event Windows::Foundation::TypedEventHandler<TVServiceEventAdapter^, TVUpChannelCalledEventArgs^>^ UpChannelCalled 
    { 
        Windows::Foundation::EventRegistrationToken add(Windows::Foundation::TypedEventHandler<TVServiceEventAdapter^, TVUpChannelCalledEventArgs^>^ handler) 
        { 
            return _UpChannelCalled += ref new Windows::Foundation::EventHandler<Platform::Object^>
            ([handler](Platform::Object^ sender, Platform::Object^ args)
            {
                handler->Invoke(safe_cast<TVServiceEventAdapter^>(sender), safe_cast<TVUpChannelCalledEventArgs^>(args));
            }, Platform::CallbackContext::Same);
        } 
        void remove(Windows::Foundation::EventRegistrationToken token) 
        { 
            _UpChannelCalled -= token; 
        } 
    internal: 
        void raise(TVServiceEventAdapter^ sender, TVUpChannelCalledEventArgs^ args) 
        { 
            _UpChannelCalled(sender, args);
        } 
    }

    // Property Read Events
    event Windows::Foundation::TypedEventHandler<TVServiceEventAdapter^, TVGetChannelIDRequestedEventArgs^>^ GetChannelIDRequested 
    { 
        Windows::Foundation::EventRegistrationToken add(Windows::Foundation::TypedEventHandler<TVServiceEventAdapter^, TVGetChannelIDRequestedEventArgs^>^ handler) 
        { 
            return _GetChannelIDRequested += ref new Windows::Foundation::EventHandler<Platform::Object^>
            ([handler](Platform::Object^ sender, Platform::Object^ args)
            {
                handler->Invoke(safe_cast<TVServiceEventAdapter^>(sender), safe_cast<TVGetChannelIDRequestedEventArgs^>(args));
            }, Platform::CallbackContext::Same);
        } 
        void remove(Windows::Foundation::EventRegistrationToken token) 
        { 
            _GetChannelIDRequested -= token; 
        } 
    internal: 
        void raise(TVServiceEventAdapter^ sender, TVGetChannelIDRequestedEventArgs^ args) 
        { 
            _GetChannelIDRequested(sender, args);
        } 
    }

    event Windows::Foundation::TypedEventHandler<TVServiceEventAdapter^, TVGetInputSourceRequestedEventArgs^>^ GetInputSourceRequested 
    { 
        Windows::Foundation::EventRegistrationToken add(Windows::Foundation::TypedEventHandler<TVServiceEventAdapter^, TVGetInputSourceRequestedEventArgs^>^ handler) 
        { 
            return _GetInputSourceRequested += ref new Windows::Foundation::EventHandler<Platform::Object^>
            ([handler](Platform::Object^ sender, Platform::Object^ args)
            {
                handler->Invoke(safe_cast<TVServiceEventAdapter^>(sender), safe_cast<TVGetInputSourceRequestedEventArgs^>(args));
            }, Platform::CallbackContext::Same);
        } 
        void remove(Windows::Foundation::EventRegistrationToken token) 
        { 
            _GetInputSourceRequested -= token; 
        } 
    internal: 
        void raise(TVServiceEventAdapter^ sender, TVGetInputSourceRequestedEventArgs^ args) 
        { 
            _GetInputSourceRequested(sender, args);
        } 
    }

    event Windows::Foundation::TypedEventHandler<TVServiceEventAdapter^, TVGetSupportedInputSourcesRequestedEventArgs^>^ GetSupportedInputSourcesRequested 
    { 
        Windows::Foundation::EventRegistrationToken add(Windows::Foundation::TypedEventHandler<TVServiceEventAdapter^, TVGetSupportedInputSourcesRequestedEventArgs^>^ handler) 
        { 
            return _GetSupportedInputSourcesRequested += ref new Windows::Foundation::EventHandler<Platform::Object^>
            ([handler](Platform::Object^ sender, Platform::Object^ args)
            {
                handler->Invoke(safe_cast<TVServiceEventAdapter^>(sender), safe_cast<TVGetSupportedInputSourcesRequestedEventArgs^>(args));
            }, Platform::CallbackContext::Same);
        } 
        void remove(Windows::Foundation::EventRegistrationToken token) 
        { 
            _GetSupportedInputSourcesRequested -= token; 
        } 
    internal: 
        void raise(TVServiceEventAdapter^ sender, TVGetSupportedInputSourcesRequestedEventArgs^ args) 
        { 
            _GetSupportedInputSourcesRequested(sender, args);
        } 
    }

    event Windows::Foundation::TypedEventHandler<TVServiceEventAdapter^, TVGetVersionRequestedEventArgs^>^ GetVersionRequested 
    { 
        Windows::Foundation::EventRegistrationToken add(Windows::Foundation::TypedEventHandler<TVServiceEventAdapter^, TVGetVersionRequestedEventArgs^>^ handler) 
        { 
            return _GetVersionRequested += ref new Windows::Foundation::EventHandler<Platform::Object^>
            ([handler](Platform::Object^ sender, Platform::Object^ args)
            {
                handler->Invoke(safe_cast<TVServiceEventAdapter^>(sender), safe_cast<TVGetVersionRequestedEventArgs^>(args));
            }, Platform::CallbackContext::Same);
        } 
        void remove(Windows::Foundation::EventRegistrationToken token) 
        { 
            _GetVersionRequested -= token; 
        } 
    internal: 
        void raise(TVServiceEventAdapter^ sender, TVGetVersionRequestedEventArgs^ args) 
        { 
            _GetVersionRequested(sender, args);
        } 
    }

    // Property Write Events
    event Windows::Foundation::TypedEventHandler<TVServiceEventAdapter^, TVSetChannelIDRequestedEventArgs^>^ SetChannelIDRequested 
    { 
        Windows::Foundation::EventRegistrationToken add(Windows::Foundation::TypedEventHandler<TVServiceEventAdapter^, TVSetChannelIDRequestedEventArgs^>^ handler) 
        { 
            return _SetChannelIDRequested += ref new Windows::Foundation::EventHandler<Platform::Object^>
            ([handler](Platform::Object^ sender, Platform::Object^ args)
            {
                handler->Invoke(safe_cast<TVServiceEventAdapter^>(sender), safe_cast<TVSetChannelIDRequestedEventArgs^>(args));
            }, Platform::CallbackContext::Same);
        } 
        void remove(Windows::Foundation::EventRegistrationToken token) 
        { 
            _SetChannelIDRequested -= token; 
        } 
    internal: 
        void raise(TVServiceEventAdapter^ sender, TVSetChannelIDRequestedEventArgs^ args) 
        { 
            _SetChannelIDRequested(sender, args);
        } 
    }

    event Windows::Foundation::TypedEventHandler<TVServiceEventAdapter^, TVSetInputSourceRequestedEventArgs^>^ SetInputSourceRequested 
    { 
        Windows::Foundation::EventRegistrationToken add(Windows::Foundation::TypedEventHandler<TVServiceEventAdapter^, TVSetInputSourceRequestedEventArgs^>^ handler) 
        { 
            return _SetInputSourceRequested += ref new Windows::Foundation::EventHandler<Platform::Object^>
            ([handler](Platform::Object^ sender, Platform::Object^ args)
            {
                handler->Invoke(safe_cast<TVServiceEventAdapter^>(sender), safe_cast<TVSetInputSourceRequestedEventArgs^>(args));
            }, Platform::CallbackContext::Same);
        } 
        void remove(Windows::Foundation::EventRegistrationToken token) 
        { 
            _SetInputSourceRequested -= token; 
        } 
    internal: 
        void raise(TVServiceEventAdapter^ sender, TVSetInputSourceRequestedEventArgs^ args) 
        { 
            _SetInputSourceRequested(sender, args);
        } 
    }

    // ITVService Implementation
    virtual Windows::Foundation::IAsyncOperation<TVDownChannelResult^>^ DownChannelAsync(_In_ Windows::Devices::AllJoyn::AllJoynMessageInfo^ info);
    virtual Windows::Foundation::IAsyncOperation<TVGetChannelListResult^>^ GetChannelListAsync(_In_ Windows::Devices::AllJoyn::AllJoynMessageInfo^ info, _In_ uint16 interfaceMemberStartingRecord, _In_ uint16 interfaceMemberNumRecords);
    virtual Windows::Foundation::IAsyncOperation<TVKeyInputResult^>^ KeyInputAsync(_In_ Windows::Devices::AllJoyn::AllJoynMessageInfo^ info, _In_ uint16 interfaceMemberVirtualKeyVal);
    virtual Windows::Foundation::IAsyncOperation<TVUpChannelResult^>^ UpChannelAsync(_In_ Windows::Devices::AllJoyn::AllJoynMessageInfo^ info);

    virtual Windows::Foundation::IAsyncOperation<TVGetChannelIDResult^>^ GetChannelIDAsync(_In_ Windows::Devices::AllJoyn::AllJoynMessageInfo^ info);
    virtual Windows::Foundation::IAsyncOperation<TVGetInputSourceResult^>^ GetInputSourceAsync(_In_ Windows::Devices::AllJoyn::AllJoynMessageInfo^ info);
    virtual Windows::Foundation::IAsyncOperation<TVGetSupportedInputSourcesResult^>^ GetSupportedInputSourcesAsync(_In_ Windows::Devices::AllJoyn::AllJoynMessageInfo^ info);
    virtual Windows::Foundation::IAsyncOperation<TVGetVersionResult^>^ GetVersionAsync(_In_ Windows::Devices::AllJoyn::AllJoynMessageInfo^ info);

    virtual Windows::Foundation::IAsyncOperation<TVSetChannelIDResult^>^ SetChannelIDAsync(_In_ Windows::Devices::AllJoyn::AllJoynMessageInfo^ info, _In_ Platform::String^ value);
    virtual Windows::Foundation::IAsyncOperation<TVSetInputSourceResult^>^ SetInputSourceAsync(_In_ Windows::Devices::AllJoyn::AllJoynMessageInfo^ info, _In_ uint16 value);

private:
    event Windows::Foundation::EventHandler<Platform::Object^>^ _DownChannelCalled;
    event Windows::Foundation::EventHandler<Platform::Object^>^ _GetChannelListCalled;
    event Windows::Foundation::EventHandler<Platform::Object^>^ _KeyInputCalled;
    event Windows::Foundation::EventHandler<Platform::Object^>^ _UpChannelCalled;
    event Windows::Foundation::EventHandler<Platform::Object^>^ _GetChannelIDRequested;
    event Windows::Foundation::EventHandler<Platform::Object^>^ _GetInputSourceRequested;
    event Windows::Foundation::EventHandler<Platform::Object^>^ _GetSupportedInputSourcesRequested;
    event Windows::Foundation::EventHandler<Platform::Object^>^ _GetVersionRequested;
    event Windows::Foundation::EventHandler<Platform::Object^>^ _SetChannelIDRequested;
    event Windows::Foundation::EventHandler<Platform::Object^>^ _SetInputSourceRequested;
};

} } } } 
