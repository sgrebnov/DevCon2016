//-----------------------------------------------------------------------------
// <auto-generated>
//   This code was generated by a tool.
//
//   Changes to this file may cause incorrect behavior and will be lost if
//   the code is regenerated.
//
//   For more information, see: http://go.microsoft.com/fwlink/?LinkID=623246
// </auto-generated>
//-----------------------------------------------------------------------------
#pragma once

namespace com { namespace lg { namespace Control { namespace TV {

ref class TVSignals;

public interface class ITVSignals
{
    event Windows::Foundation::TypedEventHandler<TVSignals^, TVChannelListChangedReceivedEventArgs^>^ ChannelListChangedReceived;
    event Windows::Foundation::TypedEventHandler<TVSignals^, TVChannelNumberChangedReceivedEventArgs^>^ ChannelNumberChangedReceived;
    event Windows::Foundation::TypedEventHandler<TVSignals^, TVInputSourceChangedReceivedEventArgs^>^ InputSourceChangedReceived;
};

public ref class TVSignals sealed : [Windows::Foundation::Metadata::Default] ITVSignals
{
public:
    // Calling this method will send the ChannelListChanged signal to every member of the session.
    void ChannelListChanged();

    // This event fires whenever the ChannelListChanged signal is sent by another member of the session.
    virtual event Windows::Foundation::TypedEventHandler<TVSignals^, TVChannelListChangedReceivedEventArgs^>^ ChannelListChangedReceived 
    { 
        Windows::Foundation::EventRegistrationToken add(Windows::Foundation::TypedEventHandler<TVSignals^, TVChannelListChangedReceivedEventArgs^>^ handler) 
        { 
            return _ChannelListChangedReceived += ref new Windows::Foundation::EventHandler<Platform::Object^>
            ([handler](Platform::Object^ sender, Platform::Object^ args)
            {
                handler->Invoke(safe_cast<TVSignals^>(sender), safe_cast<TVChannelListChangedReceivedEventArgs^>(args));
            }, Platform::CallbackContext::Same);
        } 
        void remove(Windows::Foundation::EventRegistrationToken token) 
        { 
            _ChannelListChangedReceived -= token; 
        } 
    internal: 
        void raise(TVSignals^ sender, TVChannelListChangedReceivedEventArgs^ args) 
        { 
            _ChannelListChangedReceived(sender, args);
        } 
    }

    // Calling this method will send the ChannelNumberChanged signal to every member of the session.
    void ChannelNumberChanged(_In_ TVChannelDescriptor^ interfaceMemberChannelDescriptor);

    // This event fires whenever the ChannelNumberChanged signal is sent by another member of the session.
    virtual event Windows::Foundation::TypedEventHandler<TVSignals^, TVChannelNumberChangedReceivedEventArgs^>^ ChannelNumberChangedReceived 
    { 
        Windows::Foundation::EventRegistrationToken add(Windows::Foundation::TypedEventHandler<TVSignals^, TVChannelNumberChangedReceivedEventArgs^>^ handler) 
        { 
            return _ChannelNumberChangedReceived += ref new Windows::Foundation::EventHandler<Platform::Object^>
            ([handler](Platform::Object^ sender, Platform::Object^ args)
            {
                handler->Invoke(safe_cast<TVSignals^>(sender), safe_cast<TVChannelNumberChangedReceivedEventArgs^>(args));
            }, Platform::CallbackContext::Same);
        } 
        void remove(Windows::Foundation::EventRegistrationToken token) 
        { 
            _ChannelNumberChangedReceived -= token; 
        } 
    internal: 
        void raise(TVSignals^ sender, TVChannelNumberChangedReceivedEventArgs^ args) 
        { 
            _ChannelNumberChangedReceived(sender, args);
        } 
    }

    // Calling this method will send the InputSourceChanged signal to every member of the session.
    void InputSourceChanged(_In_ uint16 interfaceMemberNewInputSource);

    // This event fires whenever the InputSourceChanged signal is sent by another member of the session.
    virtual event Windows::Foundation::TypedEventHandler<TVSignals^, TVInputSourceChangedReceivedEventArgs^>^ InputSourceChangedReceived 
    { 
        Windows::Foundation::EventRegistrationToken add(Windows::Foundation::TypedEventHandler<TVSignals^, TVInputSourceChangedReceivedEventArgs^>^ handler) 
        { 
            return _InputSourceChangedReceived += ref new Windows::Foundation::EventHandler<Platform::Object^>
            ([handler](Platform::Object^ sender, Platform::Object^ args)
            {
                handler->Invoke(safe_cast<TVSignals^>(sender), safe_cast<TVInputSourceChangedReceivedEventArgs^>(args));
            }, Platform::CallbackContext::Same);
        } 
        void remove(Windows::Foundation::EventRegistrationToken token) 
        { 
            _InputSourceChangedReceived -= token; 
        } 
    internal: 
        void raise(TVSignals^ sender, TVInputSourceChangedReceivedEventArgs^ args) 
        { 
            _InputSourceChangedReceived(sender, args);
        } 
    }

internal:
    void Initialize(_In_ alljoyn_busobject busObject, _In_ alljoyn_sessionid sessionId);
    void CallChannelListChangedReceived(_In_ TVSignals^ sender, _In_ TVChannelListChangedReceivedEventArgs^ args);
    void CallChannelNumberChangedReceived(_In_ TVSignals^ sender, _In_ TVChannelNumberChangedReceivedEventArgs^ args);
    void CallInputSourceChangedReceived(_In_ TVSignals^ sender, _In_ TVInputSourceChangedReceivedEventArgs^ args);

private:
    alljoyn_busobject m_busObject;
    alljoyn_sessionid m_sessionId;

    virtual event Windows::Foundation::EventHandler<Platform::Object^>^ _ChannelListChangedReceived;
    virtual event Windows::Foundation::EventHandler<Platform::Object^>^ _ChannelNumberChangedReceived;
    virtual event Windows::Foundation::EventHandler<Platform::Object^>^ _InputSourceChangedReceived;

    alljoyn_interfacedescription_member m_memberChannelListChanged;
    alljoyn_interfacedescription_member m_memberChannelNumberChanged;
    alljoyn_interfacedescription_member m_memberInputSourceChanged;
};

} } } } 
